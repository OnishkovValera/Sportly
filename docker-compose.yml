services:

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka



  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse


  gateway:
    build:
      context: ./GatewayModule
      dockerfile: Dockerfile
    container_name: GatewayModule
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker


  database:
    container_name: DatabaseModule
    build:
      context: ./DatabaseModule
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka


  clickhouse-module:
    container_name: ClickhouseModule
    build:
      context: ./ClickhouseModule
      dockerfile: Dockerfile
    depends_on:
      - clickhouse
      - kafka


  load:
    build:
      context: ./LoadTestModule
      dockerfile: Dockerfile
    container_name: loadModule
    depends_on:
      - gateway


volumes:
  kafka_data:
  pgdata:
  clickhouse_data:
